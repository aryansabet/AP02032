name: build and test

on:
  push:
  pull_request:
    branches: [ main ]
    # paths:
    # - '**.cs'
    # - '**.csproj'

env:
  DOTNET_VERSION: '8.0.101' # The .NET SDK version to use

jobs:

  say_hello:
    runs-on: ubuntu-latest
    outputs:
      paths: ${{ steps.generate-matrix.outputs.paths }}

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      # - name: Change File action
      #   id: p2
      #   uses: dorny/paths-filter@v3
      #   with:
      #     filters: |-
      #       include:
      #         - '**/*.csproj'
      #     list-files: csv

      - name: Path-lister action
        id: pl
        uses: Rishabh510/Path-lister-action@master
        with:
          path: "./"
          type: ".csproj"


      - name: Path-lister Output results
        run: |
          echo "Found ${{ steps.pl.outputs.path_count }} file(s) with this extension:"
          for i in ${{ steps.pl.outputs.paths }}; do
          echo $i
          done
      - name: Generate Matrix
        id: generate-matrix
        run: |

          PATHS='${{ toJSON(steps.pl.outputs.paths) }}'
          echo ::set-output name=paths::${PATHS}

          # echo "{name}={value}" >> $GITHUB_OUTPUT

  my_echo:
    runs-on: ubuntu-latest
    needs:
      - say_hello
    steps:
      - name: Echo previous outputs
        run: echo "${{ toJSON(needs.say_hello.outputs) }}"

  my_matrix:
      runs-on: ubuntu-latest
      needs:
        - my_echo
        - say_hello
      strategy:
        matrix:
          projPath: ${{ fromJSON(needs.say_hello.outputs.paths) }}
      steps:
        - name: Matrix => (${{ matrix.path }}   # ${{ matrix.version}})
          run: |
            echo ${{ matrix.path }}

  # build-and-test:

  #   name: build-and-test-${{matrix.os}}
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest]

  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Setup .NET Core
  #     uses: actions/setup-dotnet@v3
  #     with:
  #       dotnet-version: ${{ env.DOTNET_VERSION }}

  #   - name: Install dependencies
  #     run: dotnet restore **/*.sln
      
  #   - name: Build
  #     run: dotnet build --configuration Release --no-restore **/*.sln
    
  #   - name: Test
  #     run: dotnet test --no-restore --verbosity normal **/*.sln
